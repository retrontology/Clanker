version: '3.8'

services:
  chatbot:
    build: 
      context: ../..
      dockerfile: Dockerfile
    container_name: twitch-ollama-chatbot-prod
    restart: unless-stopped
    
    environment:
      # Database Configuration
      - DATABASE_TYPE=mysql
      - MYSQL_HOST=db
      - MYSQL_PORT=3306
      - MYSQL_USER=chatbot
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=twitch_bot
      
      # Ollama Configuration
      - OLLAMA_URL=http://ollama:11434
      - OLLAMA_MODEL=llama3.1
      - OLLAMA_TIMEOUT=30
      
      # Twitch Configuration
      - TWITCH_CLIENT_ID=${TWITCH_CLIENT_ID}
      - TWITCH_CLIENT_SECRET=${TWITCH_CLIENT_SECRET}
      - TWITCH_CHANNELS=${TWITCH_CHANNELS}
      - TOKEN_ENCRYPTION_KEY=${TOKEN_ENCRYPTION_KEY}
      
      # Content Filtering
      - CONTENT_FILTER_ENABLED=true
      - BLOCKED_WORDS_FILE=/app/blocked_words.txt
      
      # Logging Configuration
      - LOG_LEVEL=INFO
      - LOG_FORMAT=json
      - LOG_FILE=/app/logs/chatbot.log
      
      # Resource Management
      - MEMORY_WARNING_MB=1024
      - MEMORY_CRITICAL_MB=2048
      - MESSAGE_RETENTION_DAYS=90
      - METRICS_RETENTION_DAYS=30
      - CLEANUP_INTERVAL_MINUTES=30
    
    volumes:
      - chatbot_logs:/app/logs
      - ./blocked_words.txt:/app/blocked_words.txt:ro
    
    depends_on:
      - db
      - ollama
    
    networks:
      - chatbot_network
    
    # Resource limits for production
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.2'
    
    # Health check
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MySQL Database
  db:
    image: mysql:8.0
    container_name: chatbot-mysql
    restart: unless-stopped
    
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=twitch_bot
      - MYSQL_USER=chatbot
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    
    networks:
      - chatbot_network
    
    # Security and performance settings
    command: >
      --default-authentication-plugin=mysql_native_password
      --innodb-buffer-pool-size=256M
      --max-connections=100
      --query-cache-type=1
      --query-cache-size=64M
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.1'

  # Ollama Service
  ollama:
    image: ollama/ollama:latest
    container_name: chatbot-ollama
    restart: unless-stopped
    
    volumes:
      - ollama_data:/root/.ollama
    
    networks:
      - chatbot_network
    
    # Uncomment for GPU support
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: chatbot-nginx
    restart: unless-stopped
    
    ports:
      - "80:80"
      - "443:443"
    
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - chatbot_logs:/var/log/chatbot:ro
    
    depends_on:
      - chatbot
    
    networks:
      - chatbot_network

volumes:
  chatbot_logs:
    driver: local
  mysql_data:
    driver: local
  ollama_data:
    driver: local

networks:
  chatbot_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16